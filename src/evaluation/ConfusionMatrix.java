/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package evaluation;

import evaluation.performance.BinaryClassificationStat;
import javax.swing.JTextField;
import projectutils.ProjectUtils;

/**
 *
 * @author rabcan
 */
public class ConfusionMatrix extends javax.swing.JFrame {

    BinaryClassificationStat stat = new BinaryClassificationStat();

    /**
     * Creates new form ConfusionMatrix
     */
    public ConfusionMatrix() {
        initComponents();
        jTextArea1.setText(stat.getDescription());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        NegativePredictiveValue = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jaccard = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        mcc = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        f1 = new javax.swing.JTextField();
        prec = new javax.swing.JTextField();
        acc = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        youden = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        falsePositiveRate = new javax.swing.JTextField();
        falseNegativeRate = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        spec = new javax.swing.JTextField();
        FalseDiscoverRate = new javax.swing.JTextField();
        sens = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        dor = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        balancedacc1 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        prevalance = new javax.swing.JTextField();
        falseomissionrate = new javax.swing.JTextField();
        lrplus = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        markedness = new javax.swing.JTextField();
        lrminus = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        FowlkesMallowsndex = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        tn = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        tp = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        fp = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        fn = new javax.swing.JSpinner();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Measures"));

        NegativePredictiveValue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NegativePredictiveValueMouseClicked(evt);
            }
        });
        NegativePredictiveValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NegativePredictiveValueActionPerformed(evt);
            }
        });

        jLabel8.setText("Precision");

        jaccard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jaccardMouseClicked(evt);
            }
        });
        jaccard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jaccardActionPerformed(evt);
            }
        });

        jLabel9.setText("F1 Score");

        jLabel5.setText("Accuracy");

        jLabel11.setText("Youden's index");

        jLabel7.setText("Sensitivity");

        mcc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mccMouseClicked(evt);
            }
        });
        mcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mccActionPerformed(evt);
            }
        });

        jLabel13.setText("Negative Predictive Value");

        jLabel12.setText("Jaccard index");

        f1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                f1MouseClicked(evt);
            }
        });
        f1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f1ActionPerformed(evt);
            }
        });

        prec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                precMouseClicked(evt);
            }
        });

        acc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                accMouseClicked(evt);
            }
        });
        acc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accActionPerformed(evt);
            }
        });

        jLabel16.setText("False Negative Rate\t");

        youden.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                youdenMouseClicked(evt);
            }
        });
        youden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                youdenActionPerformed(evt);
            }
        });

        jLabel10.setText("MCC");

        jLabel6.setText("Specificity");

        jLabel14.setText("False Discovery Rate\t");

        falsePositiveRate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                falsePositiveRateMouseClicked(evt);
            }
        });
        falsePositiveRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                falsePositiveRateActionPerformed(evt);
            }
        });

        falseNegativeRate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                falseNegativeRateMouseClicked(evt);
            }
        });
        falseNegativeRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                falseNegativeRateActionPerformed(evt);
            }
        });

        jLabel15.setText("False Positive Rate");

        spec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                specMouseClicked(evt);
            }
        });

        FalseDiscoverRate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FalseDiscoverRateMouseClicked(evt);
            }
        });
        FalseDiscoverRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FalseDiscoverRateActionPerformed(evt);
            }
        });

        sens.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sensMouseClicked(evt);
            }
        });

        jLabel17.setText("DOR");

        dor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dorMouseClicked(evt);
            }
        });
        dor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dorActionPerformed(evt);
            }
        });

        jLabel18.setText("Balanced Accuracy");

        balancedacc1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                balancedacc1MouseClicked(evt);
            }
        });

        jLabel19.setText("Prevalance");

        jLabel20.setText("False omission rate (FOR)");

        jLabel21.setText("Positive likelihood ratio (LR+)");

        prevalance.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prevalanceMouseClicked(evt);
            }
        });
        prevalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevalanceActionPerformed(evt);
            }
        });

        falseomissionrate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                falseomissionrateMouseClicked(evt);
            }
        });
        falseomissionrate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                falseomissionrateActionPerformed(evt);
            }
        });

        lrplus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lrplusplusMouseClicked(evt);
            }
        });
        lrplus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrplusplusActionPerformed(evt);
            }
        });

        jLabel22.setText("Markedness (MK)");

        markedness.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                markednessMouseClicked(evt);
            }
        });
        markedness.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                markednessActionPerformed(evt);
            }
        });

        lrminus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lrminusMouseClicked(evt);
            }
        });
        lrminus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrminusActionPerformed(evt);
            }
        });

        jLabel23.setText("Negative likelihood ratio (LR-)");

        jLabel24.setText("Fowlkes–Mallows index");

        FowlkesMallowsndex.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FowlkesMallowsndexMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(falseNegativeRate)
                    .addComponent(spec)
                    .addComponent(FalseDiscoverRate)
                    .addComponent(sens)
                    .addComponent(prevalance)
                    .addComponent(dor)
                    .addComponent(falseomissionrate)
                    .addComponent(lrplus)
                    .addComponent(markedness)
                    .addComponent(mcc)
                    .addComponent(lrminus)
                    .addComponent(f1)
                    .addComponent(prec)
                    .addComponent(FowlkesMallowsndex)
                    .addComponent(youden)
                    .addComponent(NegativePredictiveValue)
                    .addComponent(jaccard)
                    .addComponent(falsePositiveRate)
                    .addComponent(balancedacc1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(acc, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(balancedacc1)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sens)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spec)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prec)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FowlkesMallowsndex)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(f1)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mcc)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(youden)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jaccard)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NegativePredictiveValue)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FalseDiscoverRate)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(falsePositiveRate)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(falseNegativeRate)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prevalance)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(falseomissionrate)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(markedness)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lrminus)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lrplus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Matrix"));

        jLabel4.setText("Condition negative");

        tn.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        tn.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tnStateChanged(evt);
            }
        });

        jLabel3.setText("Condition positive");

        tp.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        tp.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tpStateChanged(evt);
            }
        });

        jLabel1.setText("Predicted positive ");

        fp.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        fp.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                fpStateChanged(evt);
            }
        });

        jLabel2.setText("Predicted negative");

        fn.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        fn.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                fnStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(fn)
                            .addComponent(tp, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fp))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(tn)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Description"));

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tpStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tpStateChanged
        stat.setTP((Integer) tp.getValue());
        recompute();
    }//GEN-LAST:event_tpStateChanged

    private void fpStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_fpStateChanged
        stat.setFP((Integer) fp.getValue());
        recompute();
    }//GEN-LAST:event_fpStateChanged

    private void fnStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_fnStateChanged
        stat.setFN((Integer) fn.getValue());
        recompute();
    }//GEN-LAST:event_fnStateChanged

    private void tnStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tnStateChanged
        stat.setTN((Integer) tn.getValue());
        recompute();
    }//GEN-LAST:event_tnStateChanged

    private void FowlkesMallowsndexMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FowlkesMallowsndexMouseClicked
        getTextToClipboard(FowlkesMallowsndex);
    }//GEN-LAST:event_FowlkesMallowsndexMouseClicked

    private void lrminusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrminusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lrminusActionPerformed

    private void lrminusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrminusMouseClicked
        getTextToClipboard(lrminus);
    }//GEN-LAST:event_lrminusMouseClicked

    private void markednessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_markednessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_markednessActionPerformed

    private void markednessMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_markednessMouseClicked
        getTextToClipboard(markedness);
    }//GEN-LAST:event_markednessMouseClicked

    private void lrplusplusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrplusplusActionPerformed
    }//GEN-LAST:event_lrplusplusActionPerformed

    private void lrplusplusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrplusplusMouseClicked
        getTextToClipboard(lrplus);
    }//GEN-LAST:event_lrplusplusMouseClicked

    private void falseomissionrateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_falseomissionrateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_falseomissionrateActionPerformed

    private void falseomissionrateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_falseomissionrateMouseClicked
        getTextToClipboard(falseomissionrate);
    }//GEN-LAST:event_falseomissionrateMouseClicked

    private void prevalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prevalanceActionPerformed

    private void prevalanceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prevalanceMouseClicked
        getTextToClipboard(prevalance);
    }//GEN-LAST:event_prevalanceMouseClicked

    private void balancedacc1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_balancedacc1MouseClicked
        getTextToClipboard(balancedacc1);
    }//GEN-LAST:event_balancedacc1MouseClicked

    private void dorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dorActionPerformed

    private void dorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dorMouseClicked
        getTextToClipboard(dor);
    }//GEN-LAST:event_dorMouseClicked

    private void sensMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sensMouseClicked
        getTextToClipboard(sens);
    }//GEN-LAST:event_sensMouseClicked

    private void FalseDiscoverRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FalseDiscoverRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FalseDiscoverRateActionPerformed

    private void FalseDiscoverRateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FalseDiscoverRateMouseClicked
        getTextToClipboard(FalseDiscoverRate);
    }//GEN-LAST:event_FalseDiscoverRateMouseClicked

    private void specMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_specMouseClicked
        getTextToClipboard(spec);
    }//GEN-LAST:event_specMouseClicked

    private void falseNegativeRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_falseNegativeRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_falseNegativeRateActionPerformed

    private void falseNegativeRateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_falseNegativeRateMouseClicked
        getTextToClipboard(falseNegativeRate);
    }//GEN-LAST:event_falseNegativeRateMouseClicked

    private void falsePositiveRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_falsePositiveRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_falsePositiveRateActionPerformed

    private void falsePositiveRateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_falsePositiveRateMouseClicked
        getTextToClipboard(falsePositiveRate);
    }//GEN-LAST:event_falsePositiveRateMouseClicked

    private void youdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_youdenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_youdenActionPerformed

    private void youdenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_youdenMouseClicked
        getTextToClipboard(youden);
    }//GEN-LAST:event_youdenMouseClicked

    private void accMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accMouseClicked
        getTextToClipboard(acc);
    }//GEN-LAST:event_accMouseClicked

    private void precMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_precMouseClicked
        getTextToClipboard(prec);
    }//GEN-LAST:event_precMouseClicked

    private void f1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_f1ActionPerformed

    private void f1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_f1MouseClicked
        getTextToClipboard(f1);
    }//GEN-LAST:event_f1MouseClicked

    private void mccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mccActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mccActionPerformed

    private void mccMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mccMouseClicked
        getTextToClipboard(mcc);
    }//GEN-LAST:event_mccMouseClicked

    private void jaccardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jaccardActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jaccardActionPerformed

    private void jaccardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jaccardMouseClicked
        getTextToClipboard(jaccard);
    }//GEN-LAST:event_jaccardMouseClicked

    private void NegativePredictiveValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NegativePredictiveValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NegativePredictiveValueActionPerformed

    private void NegativePredictiveValueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NegativePredictiveValueMouseClicked
        getTextToClipboard(NegativePredictiveValue);
    }//GEN-LAST:event_NegativePredictiveValueMouseClicked

    private void accActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accActionPerformed

    public void getTextToClipboard(JTextField field) {
        try {
            double d = Double.parseDouble(field.getText());
            d = ProjectUtils.round(d, 3);
            ProjectUtils.toClipboard(ProjectUtils.formatDouble(d));
        } catch (Exception e) {
        }
    }

    private void recompute() {
        acc.setText(stat.getAccuracy() + "");
        balancedacc1.setText(stat.getBalancedAccuracy() + "");
        sens.setText(stat.getSensitivity() + "");
        spec.setText(stat.getSpecificity() + "");
        prec.setText(stat.getPrecision() + "");
        f1.setText(stat.getF1Score() + "");
        mcc.setText(stat.getMCC() + "");
        youden.setText(stat.getYoudensIndex() + "");
        jaccard.setText(stat.getJaccardIndex() + "");

        NegativePredictiveValue.setText(stat.getNegativePredictiveValue() + "");
        falseNegativeRate.setText(stat.getFalseNegativeRate() + "");
        falsePositiveRate.setText(stat.getFalsePositiveRate() + "");
      //  FalseDiscoverRate.setText(stat.getFalseDiscoveryRate() + "");

     //   lrplus.setText(stat.getPositiveLikelihoodRatio() + "");
      //  lrminus.setText(stat.getNegativeLikelihoodRatio() + "");
      //  prevalance.setText(stat.getPrevalence() + "");
      //  markedness.setText(stat.getMarkedness() + "");
    //    falseomissionrate.setText(stat.getFalseDiscoveryRate()+ "");
      //  FowlkesMallowsndex.setText(stat.getFowlkesMallowsIndex()+ "");
        
        dor.setText(stat.getDOR() + "");

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                System.out.println(info.getName());
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfusionMatrix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfusionMatrix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfusionMatrix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfusionMatrix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConfusionMatrix().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField FalseDiscoverRate;
    private javax.swing.JTextField FowlkesMallowsndex;
    private javax.swing.JTextField NegativePredictiveValue;
    private javax.swing.JTextField acc;
    private javax.swing.JTextField balancedacc1;
    private javax.swing.JTextField dor;
    private javax.swing.JTextField f1;
    private javax.swing.JTextField falseNegativeRate;
    private javax.swing.JTextField falsePositiveRate;
    private javax.swing.JTextField falseomissionrate;
    private javax.swing.JSpinner fn;
    private javax.swing.JSpinner fp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jaccard;
    private javax.swing.JTextField lrminus;
    private javax.swing.JTextField lrplus;
    private javax.swing.JTextField markedness;
    private javax.swing.JTextField mcc;
    private javax.swing.JTextField prec;
    private javax.swing.JTextField prevalance;
    private javax.swing.JTextField sens;
    private javax.swing.JTextField spec;
    private javax.swing.JSpinner tn;
    private javax.swing.JSpinner tp;
    private javax.swing.JTextField youden;
    // End of variables declaration//GEN-END:variables
}
